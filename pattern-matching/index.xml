<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Overview on Pony Tutorial</title>
    <link>https://epiceric.github.io/pony-tutorial/pattern-matching.html</link>
    <description>Recent content in Overview on Pony Tutorial</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="https://epiceric.github.io/pony-tutorial/pattern-matching/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>As Operator</title>
      <link>https://epiceric.github.io/pony-tutorial/pattern-matching/as.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://epiceric.github.io/pony-tutorial/pattern-matching/as.html</guid>
      <description>The as operator in Pony has two related uses. First, it provides a safe way to increase the specificity of an object&#39;s type (casting). Second, it gives the programmer a way to specify the type of the items in an array literal.
Safely converting to a more specific type (casting) The as operator can be used to create a reference to an object with a more specific type than the given reference, if possible.</description>
    </item>
    
    <item>
      <title>Match Expressions</title>
      <link>https://epiceric.github.io/pony-tutorial/pattern-matching/match.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://epiceric.github.io/pony-tutorial/pattern-matching/match.html</guid>
      <description>If we want to compare an expression to a value then we use an if. But if we want to compare an expression to a lot of values this gets very tedious. Pony provides a powerful pattern matching facility, combining matching on values and types, without any special code required.
Matching: the basics Here&#39;s a simple example of a match expression that produces a string.
match x | 2 =&amp;gt; &amp;quot;int&amp;quot; | 2.</description>
    </item>
    
  </channel>
</rss>